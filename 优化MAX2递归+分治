#include <iostream>

// 交换两个整数的函数
void swap(int& a, int& b) {
    int temp = a;
    a = b;
    b = temp;
}

// 辅助函数，用于更新最大和次大元素的索引
void updateMax(int A[], int& x1, int& x2, int i) {
    if (A[i] > A[x1]) {
        x2 = x1;
        x1 = i;
    } else if (A[i] > A[x2]) {
        x2 = i;
    }
}

// 从数组区间A[lo, hi)中找出最大的两个整数A[x1]和A[x2]（A[x1] >= A[x2]）
void max2(int A[], int lo, int hi, int& x1, int& x2) {
    if (hi - lo < 2) {
        return;
    }
    if (hi - lo == 2) {
        x1 = (A[lo] > A[lo + 1])? lo : lo + 1;
        x2 = (A[lo] > A[lo + 1])? lo + 1 : lo;
        return;
    }
    int mi = (lo + hi) / 2;
    int x1L, x2L;
    max2(A, lo, mi, x1L, x2L);
    int x1R, x2R;
    max2(A, mi, hi, x1R, x2R);

    x1 = (A[x1L] > A[x1R])? x1L : x1R;
    x2 = -1;
    updateMax(A, x1, x2, (x1 == x1L)? x2L : x2R);
    updateMax(A, x1, x2, (x1 == x1L)? x1R : x1L);
}
//test
int main() {
    int A[] = {5, 3, 8, 1, 9, 2};
    int n = sizeof(A) / sizeof(A[0]);
    int x1, x2;
    max2(A, 0, n, x1, x2);
    std::cout << "最大的数是 A[" << x1 << "] = " << A[x1] << std::endl;
    std::cout << "第二大的数是 A[" << x2 << "] = " << A[x2] << std::endl;
    return 0;
}
