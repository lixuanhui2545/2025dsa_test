#include <iostream>

// 交换两个整数的函数
void swap(int& a, int& b) {
    int temp = a;
    a = b;
    b = temp;
}

// 从数组区间A[lo, hi)中找出最大的两个整数A[x1]和A[x2]（A[x1] >= A[x2]）
void max2(int A[], int lo, int hi, int& x1, int& x2) {
    if (lo + 2 == hi) {  // 区间只有两个元素
        if (A[lo] > A[lo + 1]) {
            x1 = lo;
            x2 = lo + 1;
        } else {
            x1 = lo + 1;
            x2 = lo;
        }
        return;
    }
    if (lo + 3 == hi) {  // 区间有三个元素
        if (A[lo] > A[lo + 1]) {
            if (A[lo] > A[lo + 2]) {
                x1 = lo;
                if (A[lo + 1] > A[lo + 2]) {
                    x2 = lo + 1;
                } else {
                    x2 = lo + 2;
                }
            } else {
                x1 = lo + 2;
                x2 = lo;
            }
        } else {
            if (A[lo + 1] > A[lo + 2]) {
                x1 = lo + 1;
                if (A[lo] > A[lo + 2]) {
                    x2 = lo;
                } else {
                    x2 = lo + 2;
                }
            } else {
                x1 = lo + 2;
                x2 = lo + 1;
            }
        }
        return;
    }
    int mi = (lo + hi) / 2;  // 计算中间索引，划分区间
    int x1L, x2L;
    max2(A, lo, mi, x1L, x2L);  // 递归处理左半区间
    int x1R, x2R;
    max2(A, mi, hi, x1R, x2R);  // 递归处理右半区间
    if (A[x1L] > A[x1R]) {
        x1 = x1L;
        x2 = (A[x2L] > A[x1R])? x2L : x1R;
    } else {
        x1 = x1R;
        x2 = (A[x1L] > A[x2R])? x1L : x2R;
    }
}
//https://www.doubao.com/thread/w315e48b0ea5b9df

